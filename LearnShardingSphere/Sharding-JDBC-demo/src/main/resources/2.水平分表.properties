# \u914D\u7F6E\u771F\u5B9E\u6570\u636E\u6E90,\u7B49\u53F7\u540E\u9762\u6570\u636E\u6E90\u540D\u79F0\u53EF\u4EE5\u81EA\u5B9A\u4E49;\u591A\u4E2A\u6570\u636E\u6E90\u7528\u9017\u53F7\u9694\u5F00
spring.shardingsphere.datasource.names=orderdb

# \u914D\u7F6E\u6570\u636E\u6E90
# orderdb \u6570\u636E\u6E90
spring.shardingsphere.datasource.orderdb.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.orderdb.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.orderdb.jdbc-url=jdbc:mysql://localhost:3306/order_db?useSSL=false&characterEncoding=utf8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.orderdb.username=root
spring.shardingsphere.datasource.orderdb.password=1234

# \u914D\u7F6E t_order \u8868\u89C4\u5219
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=orderdb.t_order_$->{0..1}

# \u914D\u7F6E\u5206\u8868\u7B56\u7565(id \u662F\u5076\u6570\u8FDB\u5165 order_0,id \u662F\u5947\u6570\u8FDB\u5165 order_1)
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{id % 2}

# \u6307\u5B9A t_order \u8868\u4E3B\u952E\u540D\u4EE5\u53CA\u4E3B\u952E\u751F\u6210\u7B56\u7565SNOWFLAKE(\u96EA\u82B1\u7B97\u6CD5)
spring.shardingsphere.sharding.tables.t_order.key-generator.column=id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE

# \u6253\u5370sql
spring.shardingsphere.props.sql.show=true

